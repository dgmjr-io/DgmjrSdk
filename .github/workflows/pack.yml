# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Get global.json
      uses: dgmjr-actions/download-global.json@v0.0.5
    - name: Setup NuGet.exe for use with actions
      # You may pin to the exact commit or the version.
      # uses: NuGet/setup-nuget@296fd3ccf8528660c91106efefe2364482f86d6f
      uses: NuGet/setup-nuget@v1.2.0
      with:
        # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
        nuget-version: latest # optional, default is latest
        # NuGet API Key to configure.
        nuget-api-key: ${{ secrets.GITHUB_TOKEN }} # optional
        # Source to scope the NuGet API Key to.
        nuget-api-key-source: ${{ vars.GIT_NUGET_ENDPOINT }} # optional
    - name: Restore dependencies
      run: dotnet restore src/DgmjrSdk.nuproj
    - name: Build
      run: dotnet build src/DgmjrSdk.nuproj --no-restore -c:Release
#     - name: Test
#       run: dotnet test --no-build --verbosity normal
