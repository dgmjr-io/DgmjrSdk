name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Checkout the repository being compiled
        uses: actions/checkout@v3
        with:
          path: Repo
      - name: Checkout the Packages repository alongside the one being compiled
        uses: actions/checkout@v3
        with:
          repository: dgmjr-io/Packages
          path: Packages
      - name: Run setup-dgmjrsdk
        uses: dgmjr-actions/setup-dgmjrsdk@main
        with:
          git-token: ${{ secrets.GITHUB_TOKEN }}
          environment: Release
          git-nuget-endpoint: ${{ vars.GIT_NUGET_ENDPOINT }}
          private-nuget-endpoint: ${{ vars.PROGET_ENDPOINT_URL }}
          private-nuget-api-key: ${{ secrets.PROGET_API_KEY }}
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"dgmjr-io_DgmjrSdk" /o:"dgmjr-io" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet restore Repo/src/DgmjrSdk.nuproj -c:Release
          dotnet build Repo/src/DgmjrSdk.nuproj --no-restore -c:Release
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
