<!--
 * PackageReadme.targets
 *
 *   Created: 2022-10-21-11:40:42
 *   Modified: 2022-11-12-03:55:06
 *
 *   Author: David G. Moore, Jr. <david@dgmjr.io>
 *
 *   Copyright Â© 2022-2023 David G. Moore, Jr., All Rights Reserved
 *      License: MIT (https://opensource.org/licenses/MIT)
-->

<Project>
	<PropertyGroup>
      <IntermediateOutputPath Condition="'$(IntermediateOutputPath)' == ''">obj/</IntermediateOutputPath>
      <PackageReadmeFileHintPath>$(MSBuildProjectDirectory)/README.md</PackageReadmeFileHintPath>
      <PackageReadmeFile>$(MSBuildProjectName).README.md</PackageReadmeFile>
      <GeneratedPackageReadmeFileHintPath>$(MSBuildProjectDirectory)/$(IntermediateOutputPath)/$(PackageReadmeFile)</GeneratedPackageReadmeFileHintPath>
	</PropertyGroup>
	<Target Name="CheckReadmeExists" BeforeTargets="EnsurePackageReadme" Condition="'$(IsOuterBuild)' != 'false'">
    <PropertyGroup>
      <GeneratedPackageReadmeFileContents>
---;
title: $(Title);
lastmod: $(Date:yyyy-MM-dd-HH:mm:ss);
date: $(Date:yyyy-MM-dd-HH:mm:ss);
license: $(PackageLicenseExpression);
slug: $(MSBuildProjectName)-readme;
version: $(PackageVersion);
type: readme;        authors:;
  @(PackageAuthor->'  - %(Initials);');
description: $(Description);
keywords:;
  - $(MSBuildProjectName);
  @(PackageTag->'  - %(Identity)');
type: readme
---;
;
# $(MSBuildProjectName) README;
;
This file is generated from the contents of the project file.;
;
## Package Description;
;
$(Description);
;
## Getting Started;
;
## Prerequisites;
;
## Installation;
;
## Usage;
;
## Contributing;
;
## Versioning;
      </GeneratedPackageReadmeFileContents>
    </PropertyGroup>

    <Warning Condition="!Exists('$(PackageReadmeFileHintPath)')"
      Code="READMENOTFOUND001"
      File="$(MSBuildProjectDirectory)/README.md"
      Text="No readme file exists for the package '$(MSBuildProjectName)'; using the generated backup README.md file." />
	</Target>

  <Target Name="EnsurePackageReadme" BeforeTargets="GetPackageContents" DependsOnTargets="GitInfo;GetPackageMetadata;CheckReadmeExists;SetPackageDescription" Condition="'$(IsOuterBuild)' != 'false'">
    <!-- Fallback to using the package's description as the README.md contents -->
    <ItemGroup Condition="!Exists('$(PackageReadmeFileHintPath)')">
      <ReadmeFileContents Include="$(GeneratedPackageReadmeFileContents);$(BuildMessage)" Visible="false" />
    </ItemGroup>

    <!-- Read the contents from the package README file, if it exists -->
    <!-- <ItemGroup Condition="Exists('$(PackageReadmeFileHintPath)')">
      <ReadLinesFromFile File="$(PackageReadmeFileHintPath)">
        <Output TaskParameter="Lines" ItemName="ReadmeFileContents" />
      </ReadLinesFromFile>
    </ItemGroup> -->

    <!-- <ItemGroup>
      <ReadmeFileContents Include="$(BuildMessage)" Condition="Exists('$(PackageReadmeFileHintPath)')" />
    </ItemGroup> -->

    <!-- Write it to the "obj/" directory -->
    <WriteLinesToFile File="$(GeneratedPackageReadmeFileHintPath)" Lines="@(ReadmeFileContents)" Overwrite="true" Condition="!Exists('$(PackageReadmeFileHintPath)')" />
    <Copy SourceFiles="$(PackageReadmeFileHintPath)" DestinationFiles="$(GeneratedPackageReadmeFileHintPath)" Condition="Exists('$(PackageReadmeFileHintPath)')" />

    <PropertyGroup>
      <PackageReadmeFilePath>$(GeneratedPackageReadmeFileHintPath)</PackageReadmeFilePath>
      <!-- <PackageReadme Condition="Exists($(GeneratedPackageReadmeFileHintPath))">$(GeneratedPackageReadmeFileHintPath)</PackageReadme> -->
		</PropertyGroup>

		<ItemGroup>
      <PackageReadmeFile Include="$(PackageReadmeFilePath)" Visible="true" Link="docs/README.md" />
      <Content Remove="@(Content->WithMetadataValue('PackagePath', 'README.md'))" />
			<PackageFile Include="$(GeneratedPackageReadmeFileHintPath)" PackagePath="$(PackageReadmeFile)" Condition="Exists($(GeneratedPackageReadmeFileHintPath))" Visible="true" Link="docs/README.md" />
		</ItemGroup>
  </Target>
</Project>
